<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddToCart.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wsXzfCRifw8jAAAAABJRU5ErkJggg==
</value>
  </data>
</root>